openapi: 3.0.0
info:
  title: Todo App API
  version: "1.0"
servers:
  - url: http://localhost:3000/api-v1 # Development Server
  - url: https://effect-api.onrender.com/ # Production Server

components:
  schemas:
    Todo:
      type: object
      properties:
        completed:
          type: boolean
        id:
          type: integer
        text:
          type: string
        updated_at:
          type: string
          format: date-time

  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header

paths:
  /todos:
    get:
      summary: Get a list of all Todo items.
      security:
        - api_key: []
      parameters:
        - name: id
          in: query
          description: Filter by id field in the format 'id=condition:value e.g. id=lt:7 for id < 7. Conditions = lt, lte, eq, gt, gte
          required: false
          schema:
            type: string
            pattern: ^(lt|lte|eq|gt|gte):[0-9]+$
        - name: text
          in: query
          description: Filter by text field in the format 'text=condition:value e.g. text=contains:hello for text contains 'hello'. Conditions = contains, startsWith, endsWith, eq
          required: false
          schema:
            type: string
            pattern: ^(contains|startsWith|endsWith|eq):.*$
        - name: updated_at
          in: query
          description: Filter by updated_at field in the format 'updated_at=condition:value e.g. updated_at=before:2023-09-30T16:26:51.041Z for updated_at before 2023-09-30T16:26:51.041Z' Conditions = eq, before, after
          required: false
          schema:
            type: string
            pattern: ^(eq|before|after):\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?Z$
        - name: completed
          in: query
          description: Filter by completed field
          required: false
          schema:
            type: boolean
        - name: sortBy
          in: query
          description: Sort by a specific field
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: Sort order (asc or desc)
          required: false
          schema:
            type: string
            enum: [asc, desc]
        - name: fields
          in: query
          description: List of fields to include
          required: false
          schema:
            type: array
            items:
              type: string
        - name: page_size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
        - name: page_number
          in: query
          description: Page number
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: List of all Todo items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Todo"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

    post:
      summary: Create a new Todo item.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
              required:
                - text
              additionalProperties: false
      responses:
        "201":
          description: Todo item created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "400":
          description: "Fail: ParameterError"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /todos/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Get a Todo item by ID.
      security:
        - api_key: []
      responses:
        "200":
          description: Todo item retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "401":
          description: Unauthorized
        "404":
          description: Todo item not found
        "500":
          description: Internal Server Error

    put:
      summary: Update a Todo item by ID.
      security:
        - api_key: []
      responses:
        "200":
          description: Todo item updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "400":
          description: "Fail: ParameterError"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

    delete:
      summary: Delete a Todo item by ID.
      security:
        - api_key: []
      responses:
        "204":
          description: Todo item deleted successfully
        "404":
          description: Todo item not found
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
